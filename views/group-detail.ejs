<%- include('partials/header-logged-in') %>

<!-- Hero Section -->
<section class="hero">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-lg-10 text-center">
        <h1 class="display-3"><%= group.title %></h1>
        <p class="subtitle mb-4">Support Group Meeting</p>
      </div>
    </div>
  </div>
</section>

<!-- Group Details Section -->
<section class="features py-6">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-lg-8">
        <!-- Group Info Card -->
        <div class="community-card mb-4">
          <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-3">
              <h3><i class="fas fa-users me-2"></i><%= group.title %></h3>
              <span class="badge bg-success">Active</span>
            </div>
            <p class="mb-3"><%= group.content %></p>
            <div class="d-flex align-items-center mb-3">
              <i class="fas fa-clock me-2"></i>
              <span><%= group.schedule.day %>, <%= group.schedule.time %> <%= group.schedule.timezone %></span>
            </div>
            <div class="d-flex align-items-center">
              <i class="fas fa-users me-2"></i>
              <span><%= group.participants.length %> participants</span>
            </div>
          </div>
        </div>

        <!-- Chat Section -->
        <div class="community-card">
          <div class="card-body">
            <h3>Group Chat</h3>
            <div class="chat-container" id="chatContainer">
              <% if (group.messages && group.messages.length > 0) { %>
                <% group.messages.forEach(message => { %>
                  <div class="chat-message <%= message.author._id.toString() === user._id.toString() ? 'message-sent' : 'message-received' %>">
                    <div class="message-header">
                      <img src="<%= message.author.avatar || '/images/default-avatar.png' %>" 
                           alt="<%= message.author.name %>" 
                           class="rounded-circle me-2"
                           style="width: 30px; height: 30px; object-fit: cover;">
                      <span class="message-author"><%= message.author.name %></span>
                      <small class="message-time"><%= new Date(message.createdAt).toLocaleTimeString() %></small>
                    </div>
                    <div class="message-content">
                      <%= message.content %>
                    </div>
                  </div>
                <% }); %>
              <% } else { %>
                <div class="alert alert-info">
                  No messages yet. Start the conversation!
                </div>
              <% } %>
            </div>

            <!-- Message Input -->
            <form id="messageForm" class="mt-3">
              <div class="input-group">
                <input type="text" class="form-control" id="messageInput" placeholder="Type your message...">
                <button type="submit" class="btn btn-primary">
                  <i class="fas fa-paper-plane"></i>
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<%- include('partials/footer') %>

<style>
.community-card {
  background-color: var(--bs-card-bg);
  border: 1px solid var(--bs-border-color);
  border-radius: 1rem;
  transition: all 0.3s ease;
  color: var(--bs-body-color);
}

.community-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.community-card .card-body {
  padding: 2rem;
}

.community-card h3 {
  color: var(--bs-primary);
  margin-bottom: 1rem;
}

.community-card p {
  color: var(--bs-body-color);
  opacity: 0.8;
}

/* Chat Styles */
.chat-container {
  height: 400px;
  overflow-y: auto;
  padding: 1rem;
  background-color: var(--bs-card-bg);
  border: 1px solid var(--bs-border-color);
  border-radius: 0.5rem;
  margin-bottom: 1rem;
}

.chat-message {
  margin-bottom: 1rem;
  max-width: 80%;
}

.message-sent {
  margin-left: auto;
}

.message-received {
  margin-right: auto;
}

.message-header {
  display: flex;
  align-items: center;
  margin-bottom: 0.5rem;
}

.message-author {
  font-weight: 500;
  margin-right: 0.5rem;
}

.message-time {
  color: var(--bs-secondary);
  font-size: 0.8rem;
}

.message-content {
  padding: 0.75rem;
  background-color: var(--bs-primary);
  color: white;
  border-radius: 1rem;
  border-top-right-radius: 0;
}

.message-sent .message-content {
  background-color: var(--bs-primary);
  border-radius: 1rem;
  border-top-right-radius: 0;
}

.message-received .message-content {
  background-color: var(--bs-secondary);
  border-radius: 1rem;
  border-top-left-radius: 0;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const chatContainer = document.getElementById('chatContainer');
  const messageForm = document.getElementById('messageForm');
  const messageInput = document.getElementById('messageInput');
  
  // Scroll chat to bottom
  chatContainer.scrollTop = chatContainer.scrollHeight;
  
  // Handle message sending
  messageForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const content = messageInput.value.trim();
    
    if (content) {
      try {
        const response = await fetch('/community/<%= group._id %>/message', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ content }),
        });

        if (response.ok) {
          messageInput.value = '';
          // Refresh the page to show new message
          window.location.reload();
        }
      } catch (error) {
        console.error('Error sending message:', error);
      }
    }
  });
});
</script> 