<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="stylesheet" href="/css/chat.css" />
        <title>MindfulConnect</title>
        <style>
            .message.error {
                background-color: #fff0f0;
                border-left: 4px solid #ff6b6b;
            }

            .message.error .message-header {
                color: #ff6b6b;
            }

            #loading {
                display: none;
            }
        </style>
    </head>
    <body>
        <%- include('partials/header-logged-in') %>

        <!-- Hero Section -->
        <section class="hero">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-lg-10 text-center">
                        <h1 class="display-3">
                            AI Chat <span class="text-gradient">Support</span>
                        </h1>
                        <p class="subtitle mb-4">
                            Start your conversation for peace of mind.
                        </p>
                    </div>
                </div>
            </div>
        </section>

        <!-- Chat Section -->
        <section class="features">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-lg-8">
                        <div class="community-card">
                            <div class="card-body">
                                <div class="chat-box" id="chatBox">
                                    <% if (messages && messages.length) { %> <%
                                    messages.forEach(function(msg) { %> <% if
                                    (msg.sender === 'user') { %>
                                    <div class="message user">
                                        <div class="message-header">
                                            <strong>You</strong>
                                            <small class="text-muted ms-2">
                                                <%= new
                                                Date(msg.createdAt).toLocaleTimeString([],
                                                {hour: '2-digit',
                                                minute:'2-digit'}) %>
                                            </small>
                                        </div>
                                        <div class="message-content">
                                            <%= msg.content %>
                                        </div>
                                    </div>
                                    <% } else if (msg.sender === 'bot') { %>
                                    <div class="message bot">
                                        <div class="message-header">
                                            <strong>MindfulBot</strong>
                                            <small class="text-muted ms-2">
                                                <%= new
                                                Date(msg.createdAt).toLocaleTimeString([],
                                                {hour: '2-digit',
                                                minute:'2-digit'}) %>
                                            </small>
                                        </div>
                                        <div class="message-content">
                                            <%= msg.content %>
                                        </div>
                                    </div>
                                    <% } %> <% }); %> <% } else { %>
                                    <div class="intro-message">
                                        <i class="fas fa-robot"></i>
                                        <h3>Welcome to MindfulBot</h3>
                                        <p>
                                            I'm here to support you on your
                                            mental health journey. How can I
                                            help you today?
                                        </p>
                                    </div>
                                    <% } %>

                                    <div id="loading" class="message bot">
                                        <div class="message-header">
                                            <strong>MindfulBot</strong>
                                        </div>
                                        <div class="message-content">
                                            Thinking...
                                        </div>
                                    </div>
                                </div>

                                <form class="chat-input" id="chatForm">
                                    <div class="input-group">
                                        <input
                                            type="text"
                                            name="userInput"
                                            class="form-control"
                                            placeholder="Type your message..."
                                            required
                                            autocomplete="off"
                                        />
                                        <button
                                            type="button"
                                            id="clearBtn"
                                            class="btn btn-outline-secondary"
                                            title="Clear conversation"
                                        >
                                            <i class="fas fa-trash"></i>
                                        </button>
                                        <button
                                            type="submit"
                                            class="btn btn-primary"
                                            id="sendBtn"
                                        >
                                            <i class="fas fa-paper-plane"></i>
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <%- include('partials/footer') %>

        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const chatBox = document.getElementById('chatBox');
                const chatForm = document.getElementById('chatForm');
                const userInput = chatForm.querySelector('input[name="userInput"]');
                const sendBtn = document.getElementById('sendBtn');
                const clearBtn = document.getElementById('clearBtn');
                const loading = document.getElementById('loading');
                const backToTop = document.getElementById('backToTop');

                // Focus input on load
                userInput.focus();

                // Handle form submission
                chatForm.addEventListener('submit', async function(e) {
                    e.preventDefault();

                    const message = userInput.value.trim();
                    if (!message) return;

                    // Disable input and button while sending
                    userInput.disabled = true;
                    sendBtn.disabled = true;

                    // Create and display user message immediately
                    const userMessageDiv = document.createElement('div');
                    userMessageDiv.className = 'message user';
                    userMessageDiv.innerHTML = `
                        <div class="message-header">
                            <strong>You</strong>
                            <small class="text-muted ms-2">${new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</small>
                        </div>
                        <div class="message-content">
                            ${message}
                        </div>
                    `;

                    // Remove intro message if it exists
                    const introMessage = chatBox.querySelector('.intro-message');
                    if (introMessage) {
                        introMessage.remove();
                    }

                    chatBox.insertBefore(userMessageDiv, loading);
                    chatBox.scrollTop = chatBox.scrollHeight;

                    // Show loading indicator
                    loading.style.display = 'block';

                    try {
                        const response = await fetch('/chat', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ userInput: message })
                        });

                        const data = await response.json();

                        if (!response.ok) {
                            throw new Error(data.error || 'Failed to send message');
                        }

                        // Clear input
                        userInput.value = '';

                        // Add bot response to chat
                        if (data.messages && data.messages.length) {
                            data.messages.forEach(msg => {
                                if (msg.sender === 'bot') {
                                    const botMessageDiv = document.createElement('div');
                                    botMessageDiv.className = 'message bot';
                                    botMessageDiv.innerHTML = `
                                        <div class="message-header">
                                            <strong>MindfulBot</strong>
                                            <small class="text-muted ms-2">${new Date(msg.createdAt).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</small>
                                        </div>
                                        <div class="message-content">
                                            ${msg.content}
                                        </div>
                                    `;
                                    chatBox.insertBefore(botMessageDiv, loading);
                                }
                            });
                        }
                    } catch (error) {
                        console.error('Error:', error);

                        // Show error message in chat
                        const errorDiv = document.createElement('div');
                        errorDiv.className = 'message bot error';
                        errorDiv.innerHTML = `
                            <div class="message-header">
                                <strong>MindfulBot</strong>
                                <small class="text-muted ms-2">${new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</small>
                            </div>
                            <div class="message-content">
                                ${error.message}
                            </div>
                        `;
                        chatBox.insertBefore(errorDiv, loading);
                    } finally {
                        // Re-enable input and button
                        userInput.disabled = false;
                        sendBtn.disabled = false;
                        loading.style.display = 'none';
                        userInput.focus();
                        chatBox.scrollTop = chatBox.scrollHeight;
                    }
                });

                // Clear chat history
                clearBtn.addEventListener('click', async function() {
                    if (!confirm('Are you sure you want to clear the conversation?')) return;

                    try {
                        const response = await fetch('/clear-chat', {
                            method: 'POST'
                        });

                        if (!response.ok) {
                            throw new Error('Failed to clear chat');
                        }

                        // Clear the chat box
                        while (chatBox.firstChild) {
                            chatBox.removeChild(chatBox.firstChild);
                        }

                        // Add back the loading element
                        chatBox.appendChild(loading);

                        // Show intro message again
                        const introMessage = document.createElement('div');
                        introMessage.className = 'intro-message';
                        introMessage.innerHTML = `
                            <i class="fas fa-robot"></i>
                            <h3>Welcome to MindfulBot</h3>
                            <p>
                                I'm here to support you on your
                                mental health journey. How can I
                                help you today?
                            </p>
                        `;
                        chatBox.insertBefore(introMessage, loading);

                    } catch (error) {
                        console.error('Error:', error);
                        const errorMsg = document.createElement('div');
                        errorMsg.className = 'error-msg';
                        errorMsg.textContent = 'Failed to clear chat. Please try again.';
                        chatForm.parentNode.insertBefore(errorMsg, chatForm);
                        setTimeout(() => errorMsg.remove(), 5000);
                    }
                });

                // Back to top button
                window.addEventListener('scroll', () => {
                    if (window.pageYOffset > 300) {
                        backToTop.classList.add('visible');
                    } else {
                        backToTop.classList.remove('visible');
                    }
                });

                backToTop.addEventListener('click', () => {
                    window.scrollTo({
                        top: 0,
                        behavior: 'smooth'
                    });
                });

                // Auto-scroll to bottom when new messages arrive
                const observer = new MutationObserver(() => {
                    chatBox.scrollTop = chatBox.scrollHeight;
                });

                observer.observe(chatBox, {
                    childList: true,
                    subtree: true
                });
            });
        </script>
    </body>
</html>
